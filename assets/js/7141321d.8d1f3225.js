"use strict";(self.webpackChunkslatedb_website=self.webpackChunkslatedb_website||[]).push([[62],{3053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"operations/logging","title":"Tracing in SlateDB","description":"SlateDB uses the tracing library for logging and diagnostics. This provides structured, contextual logging that helps debug and monitor your database operations.","source":"@site/docs/operations/logging.md","sourceDirName":"operations","slug":"/operations/logging","permalink":"/docs/operations/logging","draft":false,"unlisted":false,"editUrl":"https://github.com/slatedb/slatedb-website/tree/main/docs/operations/logging.md","tags":[],"version":"current","frontMatter":{"title":"Tracing in SlateDB"},"sidebar":"docsSidebar","previous":{"title":"Architecture","permalink":"/docs/architecture"},"next":{"title":"FAQ","permalink":"/docs/faq"}}');var r=n(4848),o=n(8453);const a={title:"Tracing in SlateDB"},i="Tracing in SlateDB",c={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"tracing-in-slatedb",children:"Tracing in SlateDB"})}),"\n",(0,r.jsxs)(t.p,{children:["SlateDB uses the ",(0,r.jsx)(t.a,{href:"https://github.com/tokio-rs/tracing",children:(0,r.jsx)(t.code,{children:"tracing"})})," library for logging and diagnostics. This provides structured, contextual logging that helps debug and monitor your database operations."]}),"\n",(0,r.jsxs)(t.p,{children:["Here's a basic example showing how to consume tracing logs with ",(0,r.jsx)(t.code,{children:"tracing_subscriber"})," and SlateDB:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:'use bytes::Bytes;\nuse object_store::{ObjectStore, memory::InMemory, path::Path};\nuse slatedb::db::Db;\nuse slatedb::config::DbOptions;\nuse std::sync::Arc;\n\n#[tokio::main]\nasync fn main() {\n\n    // Initialize tracing subscriber to see the logs\n    tracing_subscriber::fmt::init();\n\n    // Setup\n    let object_store: Arc<dyn ObjectStore> = Arc::new(InMemory::new());\n    let options = DbOptions::default();\n    let kv_store = Db::open_with_opts(\n        Path::from("/tmp/test_kv_store"),\n        options,\n        object_store,\n    )\n    .await\n    .unwrap();\n\n    // Put\n    let key = b"test_key";\n    let value = b"test_value";\n    kv_store.put(key, value).await;\n\n    // Get\n    assert_eq!(\n        kv_store.get(key).await.unwrap(),\n        Some(Bytes::from_static(value))\n    );\n\n    // Delete\n    kv_store.delete(key).await;\n    assert!(kv_store.get(key).await.unwrap().is_none());\n\n    // Close\n    kv_store.close().await.unwrap();\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(6540);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);